{"version":3,"sources":["app/features/homePage.js","app/reducers/skywalkersActions.js","app/features/skywalker.js","App.js","serviceWorker.js","app/reducers/skywalkersReducer.js","app/reducers/rootReducer.js","index.js"],"names":["HomePage","_this","this","props","fetch","list","length","then","response","json","skywalkers","addSkywalkers","skyList","map","skywalker","index","react_default","a","createElement","Button","color","animated","as","Link","to","concat","key","Content","visible","name","hidden","className","react_loader_spinner_default","type","height","width","Component","connect","state","skywalkersList","fetched","dispatch","getState","Skywalker","handleDeleteSkywalker","e","preventDefault","deleteSkywalker","match","params","id","history","push","handleBack","gender","birth_year","mass","hair_color","skin_color","eye_color","onClick","inverted","App","Switch","Route","exact","path","component","Boolean","window","location","hostname","initialState","skywalkersReducer","arguments","undefined","action","results","Object","toConsumableArray","filter","sky","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f80c713c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addSkywalkers } from '../reducers/skywalkersActions'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\nimport Loader from 'react-loader-spinner'\n\nclass HomePage extends Component {\n\n    componentWillMount(){\n        if(!this.props.fetch || this.props.list.length===0){\n            fetch('https://swapi.co/api/people/?search=Skywalker&format=json')\n            .then(response => response.json())\n            .then(skywalkers => {\n                this.props.addSkywalkers(skywalkers);\n            })\n        } \n    }\n\n  render() {\n    let skyList;\n    if(this.props.list.length>0){\n        skyList = this.props.list.map((skywalker,index)=>{\n            return <Button color=\"red\" animated='fade' as={Link} to={`/123softlab/skywalker/${index}`} key={index}>\n                        <Button.Content visible>{skywalker.name}</Button.Content>\n                        <Button.Content hidden>Check details</Button.Content>\n                     </Button>\n        });\n    }\n    if(skyList){\n        return (\n            <div className={\"gridContainer\"}>\n                {skyList}\n            </div>\n        )\n    } else {\n        return(\n            <div className={\"gridContainer\"}>\n                <Loader \n                type=\"Triangle\"\n                color=\"red\"\n                height=\"100\"\n                width=\"100\"\n                />\n            </div>\n            \n        )  \n    } \n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        list: state.skywalkers.skywalkersList,\n        fetch: state.skywalkers.fetched,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addSkywalkers: (skywalkers) => dispatch(addSkywalkers(skywalkers))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)\n","export const addSkywalkers = (skywalkers) => {\n    return( dispatch, getState) => {\n        dispatch({type: 'ADD_SKYWALKERS', skywalkers})\n    }\n}\n\nexport const deleteSkywalker = (name) => {\n    return( dispatch, getState) => {\n        dispatch({type: 'DELETE_SKYWALKER', name})\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { deleteSkywalker } from '../reducers/skywalkersActions'\nimport { Button } from 'semantic-ui-react'\n\nclass Skywalker extends Component {\n\n\n    handleDeleteSkywalker = (e) => {\n        e.preventDefault();\n        this.props.deleteSkywalker(this.props.list[this.props.match.params.id].name);\n        this.props.history.push('/123softlab/');\n    }\n\n    handleBack = (e) => {\n        e.preventDefault();\n        this.props.history.push('/123softlab/');\n    }\n\n  render() {\n\n    const skywalker = this.props.list[this.props.match.params.id];\n\n    return ( \n      <div className={\"skywalkerContainer\"}>\n      <div className={\"detailsContainer\"}>\n      <div>\n        <p>Name: <span>{skywalker.name}</span></p>\n        <p>Gender: <span>{skywalker.gender}</span></p>\n        <p>Birth Year: <span>{skywalker.birth_year}</span></p>\n        <p>Height: <span>{skywalker.height}</span></p>\n       </div>\n       <div>\n        <p>Mass: <span>{skywalker.mass}</span></p>\n        <p>Hair Color: <span>{skywalker.hair_color}</span></p>\n        <p>Skin Color: <span>{skywalker.skin_color}</span></p>\n        <p>Eye color: <span>{skywalker.eye_color}</span></p>\n       </div>  \n      </div>\n       <div className={\"buttonsContainer\"}>\n        <Button onClick={this.handleBack} inverted color=\"green\">Back to Skywalkers family members</Button>\n        <Button onClick={this.handleDeleteSkywalker} inverted color=\"red\">Delete {skywalker.name}</Button>\n       </div>\n      </div>\n    )\n  }\n}\n\n \nconst mapStateToProps = (state) => {\n    return {\n        list: state.skywalkers.skywalkersList,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteSkywalker: (name) => dispatch(deleteSkywalker(name))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Skywalker)\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport HomePage from './app/features/homePage'\nimport Skywalker from './app/features/skywalker'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div >\n        <Switch>\n          <Route exact path='/123softlab/' component={HomePage} />\n          <Route exact path='/123softlab/skywalker/:id' component={Skywalker} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    skywalkersList: [],\n    fetched: false,\n}\n\nconst skywalkersReducer = (state=initialState, action) => {\n    switch(action.type){\n        case 'ADD_SKYWALKERS' :\n            state = {\n                skywalkersList: action.skywalkers.results,\n                fetched: true,\n            }\n            return state;\n        case 'DELETE_SKYWALKER' :\n            state = {\n                skywalkersList: [...state.skywalkersList.filter(sky => sky.name!==action.name)],\n                fetched: true,\n            }\n            return state;\n        default:\n        return state\n    }\n}\n\nexport default skywalkersReducer","import { combineReducers } from 'redux'\nimport skywalkersReducer from './skywalkersReducer'\n\nconst rootReducer = combineReducers({\n    skywalkers: skywalkersReducer,\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './app/reducers/rootReducer'\nimport 'semantic-ui-css/semantic.min.css'\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n \nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n        <App />\n        </BrowserRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}